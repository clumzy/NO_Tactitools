<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <AssemblyName>NO_Tactitools</AssemblyName>
    <Product>Nuclear Option Tactical Tools</Product>
    <Version>0.2.1.2</Version>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <LangVersion>latest</LangVersion>
    <RestoreAdditionalProjectSources>
      https://api.nuget.org/v3/index.json;
      https://nuget.bepinex.dev/v3/index.json;
      https://nuget.samboy.dev/v3/index.json
    </RestoreAdditionalProjectSources>
    <RootNamespace>NO_Tactitools</RootNamespace>
    <GameDirectory>F:/SteamLibrary/steamapps/common/Nuclear Option</GameDirectory>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>

    <OutputPath>$(GameDirectory)/BepInEx/plugins/NOTT/</OutputPath> <!-- Build the dll at GameDirectory + BepInEx\plugins\MyMod -->
  </PropertyGroup>

  <!-- Debug configuration -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
  </PropertyGroup>

  <!-- Release configuration - strip debug info and source paths -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>true</Optimize>
    <PathMap>$(MSBuildProjectDirectory)=.</PathMap>
    <EmbedAllSources>false</EmbedAllSources>
    <EmbedUntrackedSources>false</EmbedUntrackedSources>
    <PublishReadyToRun>false</PublishReadyToRun>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="BepInEx.Analyzers" Version="1.*" PrivateAssets="all" />
    <PackageReference Include="BepInEx.Core" Version="5.*" />
    <PackageReference Include="BepInEx.PluginInfoProps" Version="2.*" />
    <PackageReference Include="HarmonyX" Version="2.14.0" />
    <PackageReference Include="UnityEngine.Modules" Version="2022.3.6" IncludeAssets="compile" />
  </ItemGroup>

    <ItemGroup>
    <Reference Include="Assembly-CSharp">
      <HintPath>$(GameDirectory)/NuclearOption_Data/Managed/Assembly-CSharp.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UI">
      <HintPath>$(GameDirectory)/NuclearOption_Data/Managed/UnityEngine.UI.dll</HintPath>
    </Reference>
    <Reference Include="Mirage">
      <HintPath>$(GameDirectory)/NuclearOption_Data/Managed/Mirage.dll</HintPath>
    </Reference>
    <Reference Include="Rewired_Core">
      <HintPath>$(GameDirectory)/NuclearOption_Data/Managed/Rewired_Core.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework.TrimEnd(`0123456789`))' == 'net'">
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.2" PrivateAssets="all" />
  </ItemGroup>

  <Target Name="CleanUpOutputDirectory" AfterTargets="Build">
    <ItemGroup>
      <FilesToDelete Include="$(OutputPath)*.dll" Exclude="$(OutputPath)$(AssemblyName).dll" />
    </ItemGroup>
    <Delete Files="@(FilesToDelete)" />
  </Target>

  <!-- Create a versioned release zip of the NOTT folder (contains dll + assets) after each build -->
  <PropertyGroup>
    <NottSourceDir>$(GameDirectory)\BepInEx\plugins\NOTT</NottSourceDir>
    <ReleaseOutDir>$(MSBuildProjectDirectory)\releases</ReleaseOutDir>
    <ReleaseZipName>NOTT_PR_$(Version).zip</ReleaseZipName>
    <ReleaseZipPath>$(ReleaseOutDir)\$(ReleaseZipName)</ReleaseZipPath>
  </PropertyGroup>

  <Target Name="CreateReleaseZip" AfterTargets="Build">
    <!-- Ensure output folder exists, remove old zip, then compress the NOTT folder so the root in the archive is NOTT/ -->
    <Exec Command="powershell -NoProfile -ExecutionPolicy Bypass -Command &quot;$zipOut='$(ReleaseZipPath)'; $src='$(NottSourceDir)'; $outDir=[System.IO.Path]::GetDirectoryName($zipOut); New-Item -ItemType Directory -Force -Path $outDir ^| Out-Null; if (Test-Path $zipOut) { Remove-Item -Force $zipOut }; Compress-Archive -Path $src -DestinationPath $zipOut -Force&quot;" />
  </Target>

  <Target Name="RunGameAfterBuild" AfterTargets="Build" DependsOnTargets="CreateReleaseZip">
    <Exec Command="&quot;$(GameDirectory)\NuclearOption.exe&quot;" />
  </Target>
</Project>